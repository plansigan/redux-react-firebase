{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","charAt","CreateProject","createProject","history","push","name","cols","rows","authorId","add","objectSpread","Date","console","log","App","layout_Navbar","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1818f3eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch,getState,{getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        \r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email[0],\r\n            credentials.password[0]\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'LOGIN_ERROR',err})\r\n        });\r\n    } \r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch,getState,{getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return(dispatch,getState,{getFirebase,getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email[0],\r\n            newUser.password[0]\r\n        ).then((res)=>{\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName:newUser.firstName[0],\r\n                lastName:newUser.lastName[0],\r\n                initials:newUser.firstName[0].charAt(0) + newUser.lastName[0].charAt(0)\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch(err=> {\r\n            dispatch({type:'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport SignedinLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const {auth,profile} = props;\r\n    //console.log(auth)\r\n    const links = auth.uid ? <SignedinLinks profile={profile}/> :<SignedOutLinks/>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link  to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        auth:state.firebase.auth,\r\n        profile:state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item =>{\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user}</span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectSummary;","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const  {projects,auth,notifications} = this.props\r\n\r\n        if(!auth.uid)return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'},\r\n        {collection:'notifications',limit:3,orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props)=>{\r\n    const {project,auth} = props;\r\n\r\n    if(!auth.uid)return <Redirect to='/signin'/>\r\n    if(project) {\r\n        return (\r\n            <div>\r\n                <div className=\"container section project-details\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project ...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password:''\r\n \r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : [e.target.value]\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const {authError,auth} = this.props\r\n\r\n        if(auth.uid) return <Redirect to=\"/\"/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">LOGIN</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>:null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn:(creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : [e.target.value]\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth,authError} = this.props\r\n\r\n        if(auth.uid) return <Redirect to=\"/\"/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> :null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        signUp:(newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : [e.target.value]\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n\r\n        // console.log(this.state)\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n\r\n        if(!auth.uid)return <Redirect to='/signin'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea name=\"content\" id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject:(project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch,getState,{getFirebase,getFirestore}) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId.uid,\r\n            createdAt:new Date()\r\n        }).then(() => {\r\n            dispatch({type:'CREATE_PROJECT',project})\r\n        }).catch(err=>{\r\n            console.log(err)\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err})\r\n        })\r\n        \r\n    }\r\n};","import React from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Navbar from '../src/components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard}/>\n          <Route exact path=\"/project/:id\" component={ProjectDetails}/>\n          <Route exact path=\"/signin\" component={SignIn}/>\n          <Route exact path=\"/signup\" component={SignUp}/>\n          <Route exact path=\"/create\" component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError:null\r\n}\r\n\r\nconst authReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError:'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    return state\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects:[\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState,action) => {\r\n\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project',action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error',action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA02496j8eqW0L5TS1TYznJr1LMHM_9m8c\",\r\n    authDomain: \"net-ninja-marioplan-bea0e.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-bea0e.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-bea0e\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"862550842669\",\r\n    appId: \"1:862550842669:web:bb2b1ab17fd1208d\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore()\r\n\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore,getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig,{useFirestoreForProfile:true,userProfile:'users',attachAuthIsReady:true})\n    )\n)\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}